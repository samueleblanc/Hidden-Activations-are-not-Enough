"""
This module defines constants used throughout the experiments:

ARCHITECTURES: A list of tuples defining different neural network architectures.
              Each tuple contains layer sizes for MLPs or (conv_layers, fc_layers) for CNNs.
              The architectures vary in depth and width. 
              Note that it's possible to use ResNet, AlexNet, and VGG architectures.

ATTACKS: A list of adversarial attack methods used in the experiments.

DEFAULT_EXPERIMENTS: A dictionary of default experiment configurations.
                     Each key represents an experiment name, and the value is a dictionary
                     containing parameters for the experiment.
"""

ARCHITECTURES = [
    # 0 -> 0, 1, 2, 3
    (500, 500, 500, 500, 500),
    # 1 -> 4, 5, 6
    (1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000),
    # 2 -> 7, 8
    (1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
    1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000),
    # 3 -> 9, 10,
    (10000, 10000),
    # 4 -> 11, 12
    (10000, 10000, 10000, 10000, 10000),
    # 5 -> 13, 14
    (675000, 1500, 1500, 1500, 1500),
    # 6 -> 15, 16
    (2500000, ),
    # 7 -> 8
    (814, 351, 118, 467, 823, 191, 756, 628, 935, 270),
    # CNNs
    ((10,10,10,10), (300,)),
    ((32,64), (128,)),
    ("AlexNet"),
    ("ResNet"),
    ("VGG")
]

ATTACKS = [
    "GN", 
    "FGSM", 
    # "RFGSM", 
    "PGD", 
    "EOTPGD", 
    # "FFGSM", 
    # "TPGD",
    "MIFGSM", 
    # "UPGD", 
    # "DIFGSM", 
    # "NIFGSM",
    # "PGDRS", 
    "VMIFGSM",  
    # "VNIFGSM",
    "CW", 
    # "PGDL2",
    # "PGDRSL2",
    "DeepFool", 
    # "SparseFool", 
    # "OnePixel", 
    "Pixle",
    "APGD",
    "APGDT",
    "FAB",
    "Square",
    "SPSA",
    "JSMA",
    "EADL1",
    "EADEN"
]

DEFAULT_EXPERIMENTS = {
    'resnet_cifar100': { # accuracy: 0.5017
        'pretrained': False,
        'dataset': 'cifar100',
        'batch_size': 512,
        'lr': 0.017380615684942945,
        'epochs': 100,
        'optimizer': 'sgd',
        'momentum': 0.10773147737028008,
        'weight_decay': 0.021924018744206505,
    },
    'resnet_cifar10': {# accuracy: 0.8178
        'dataset': 'cifar10',
        'batch_size': 32,
        'lr': 0.009230996304925737,
        'epochs': 150,
        'optimizer': 'sgd',
        'momentum': 0.8231700796140718,
        'weight_decay': 0.0007273616737214423
    },

    'alexnet_cifar10': {# accuracy: 0.7646
        'batch_size': 256,
        'lr': 0.03058559341951366,
        'epochs': 100,
        'optimizer': 'sgd',
        'momentum': 0.9603418928294722,
        'weight_decay': 0.0010466427910952487,
        'dataset': 'cifar10',
    },

    'alexnet_imagenet': {
        'pretrained': True,
        'dataset': 'imagenet',
    },
    'mlp_mnist': { # accuracy 0.98
        '''
        model = MLP(
                input_shape=(1, 28, 28),
                num_classes=10,
                hidden_sizes=(512, 512, 512),
                activation="relu",
                bias=False,
                dropout=0,
                residual=False,
                save=False,
                batch_norm=False
                )
        '''
        'pretrained': False,
        'dataset': 'mnist',
        'layers': (512, 512, 512, 512, 512),
        'batch_size': 32,
        'lr': 0.06941109118141582,
        'optimizer': 'sgd',
        'momentum': 0.6215073814724885,
        'weight_decay': 6.914150600886057e-05,
    },
    'vgg_cifar100': {# accuracy: 0.5478
        'dataset': 'cifar100',
        'batch_size': 64,
        'lr': 0.05296389074830272,
        'optimizer': 'sgd',
        'momentum': 0.31219518385411765,
        'weight_decay': 0.002428263299304838},


    'experiment_0': {
        'architecture_index': 0,
        'dataset': 'mnist',
        'optimizer': 'sgd',
        'lr': 0.01,
        'batch_size': 8,
        'epoch': 1,
        'reduce_lr_each': 5,
        'save_every_epochs': 2,
        'residual': False,
        'weight_decay': 0,
        'dropout': 0,
    },
    'experiment_1': {
        'architecture_index': 0,
        'optimizer': 'momentum',
        'dataset': 'mnist',
        'lr': 0.01,
        'batch_size': 32,
        'epoch': 11,
        'reduce_lr_each': 5,
        'save_every_epochs': 2,
        'residual': False,
        'weight_decay': 0,
        'dropout': 0,
    },
    'experiment_2': {
        'architecture_index': 0,
        'optimizer': 'adam',
        'dataset': 'fashion',
        'lr': 1e-06,
        'batch_size': 32,
        'epoch': 81, # 21
        'reduce_lr_each': 20,
        'save_every_epochs': 10,
        'residual': False,
        'weight_decay': 0,
        'dropout': 0,
    },
    'experiment_3': {
        'architecture_index': 0,
        'optimizer': 'sgd',
        'dataset': 'fashion',
        'lr': 0.1,
        'batch_size': 16,
        'epoch': 51, # 35
        'reduce_lr_each': 20,
        'save_every_epochs': 10,
        'residual': False,
        'weight_decay': 0,
        'dropout': 0,
    },
    'experiment_4': {
        'architecture_index': 1,
        'optimizer': 'momentum',
        'dataset': 'mnist',
        'lr': 0.01,
        'batch_size': 32,
        'epoch': 7,
        'reduce_lr_each': 5,
        'save_every_epochs': 2,
        'residual': False,
        'weight_decay': 0,
        'dropout': 0,
    },
    'experiment_5': {
        'architecture_index': 1,
        'optimizer': 'momentum',
        'dataset': 'fashion',
        'lr': 0.01,
        'batch_size': 32,
        'epoch': 11,
        'reduce_lr_each': 5,
        'save_every_epochs': 5,
        'residual': False,
        'weight_decay': 0,
        'dropout': 0,
    },
    'experiment_6': {
        'architecture_index': 1,
        'optimizer': 'adam',
        'dataset': 'mnist',
        'lr': 0.001,
        'batch_size': 128,
        'epoch': 6,
        'reduce_lr_each': 3,
        'save_every_epochs': 2,
        'residual': False,
        'weight_decay': 0,
        'dropout': 0,
    },
    'experiment_7': {
        'architecture_index': 2,
        'optimizer': 'adam',
        'dataset': 'fashion',
        'lr': 0.0001,
        'batch_size': 16,
        'epoch': 11,
        'reduce_lr_each': 5,
        'save_every_epochs': 5,
        'residual': False,
        'weight_decay': 0,
        'dropout': 0,
    },
    'experiment_8': {
        'architecture_index': 7,
        'optimizer': 'adam',
        'dataset': 'mnist',
        'lr': 0.001,
        'batch_size': 128,
        'epoch': 6,
        'reduce_lr_each': 20,
        'save_every_epochs': 5,
        'residual': False,
        'weight_decay': 0,
        'dropout': 0,
    },
    'experiment_9': {
        'architecture_index': 3,
        'optimizer': 'momentum',
        'dataset': 'mnist',
        'lr': 0.01,
        'batch_size': 32,
        'epoch': 1,
        'reduce_lr_each': 5,
        'save_every_epochs': 1,
        'residual': False,
        'weight_decay': 0,
        'dropout': 0,
    },
    'experiment_10': {
        'architecture_index': 3,
        'optimizer': 'momentum',
        'dataset': 'fashion',
        'lr': 0.01,
        'batch_size': 32,
        'epoch': 11,
        'reduce_lr_each': 5,
        'save_every_epochs': 1,
        'residual': False,
        'weight_decay': 0,
        'dropout': 0,
    },
    'experiment_11': {
        'architecture_index': 4,
        'optimizer': 'sgd',
        'dataset': 'mnist',
        'lr': 0.01,
        'batch_size': 64,
        'epoch': 6,
        'reduce_lr_each': 20,
        'save_every_epochs': 1,
        'residual': False,
        'weight_decay': 0,
        'dropout': 0,
    },
    'experiment_12': {
        'architecture_index': 4,
        'optimizer': 'sgd',
        'dataset': 'fashion',
        'lr': 0.01,
        'batch_size': 64,
        'epoch': 16,
        'reduce_lr_each': 20,
        'save_every_epochs': 5,
        'residual': False,
        'weight_decay': 0,
        'dropout': 0,
    },
    'experiment_13': { #this only trains on 40 GBs GPU
        'architecture_index': 5,
        'optimizer': 'momentum',
        'dataset': 'mnist',
        'lr': 0.001,
        'batch_size': 128,
        'epoch': 11,
        'reduce_lr_each': 40,
        'save_every_epochs': 1,
        'residual': False,
        'weight_decay': 1e-5,
        'dropout': 0.5,
    },
    'experiment_14': { #this only trains on 40 GBs GPU
        'architecture_index': 5,
        'optimizer': 'momentum',
        'dataset': 'fashion',
        'lr': 0.001,
        'batch_size': 128,
        'epoch': 11,
        'reduce_lr_each': 40,
        'save_every_epochs': 1,
        'residual': False,
        'weight_decay': 1e-5,
        'dropout': 0.5,
    },
    'experiment_15': { #this only trains on 40 GBs GPU
        'architecture_index': 6,
        'optimizer': 'momentum',
        'dataset': 'mnist',
        'lr': 0.001,
        'batch_size': 256,
        'epoch': 11,
        'reduce_lr_each': 40,
        'save_every_epochs': 1,
        'residual': False,
        'weight_decay': 0,
        'dropout': 0,
    },
    'experiment_16': { #this only trains on 40 GBs GPU
        'architecture_index': 6,
        'optimizer': 'momentum',
        'dataset': 'fashion',
        'lr': 0.001,
        'batch_size': 256,
        'epoch': 11,
        'reduce_lr_each': 5,
        'save_every_epochs': 1,
        'residual': False,
        'weight_decay': 0,
        'dropout': 0,
    },
    'experiment_17': {
        'architecture_index': 8,
        'optimizer': 'sgd',
        'dataset': 'mnist',
        'lr': 0.01,
        'batch_size': 32,
        'epoch': 11,
        'reduce_lr_each': 40,
        'save_every_epochs': 1,
        'residual': False,
        'weight_decay': 0,
        'dropout': 0,
    },
    'experiment_18': {
        'architecture_index': 8,
        'optimizer': 'momentum',
        'dataset': 'cifar10',
        'lr': 0.01,
        'batch_size': 32,
        'epoch': 61,
        'reduce_lr_each': 55,
        'save_every_epochs': 5,
        'residual': False,
        'weight_decay': 0,
        'dropout': 0,
    },
    'experiment_19': {
        'architecture_index': 9,
        'optimizer': 'adam',
        'dataset': 'cifar10',
        'lr': 0.001,
        'batch_size': 64,
        'epoch': 61,
        'reduce_lr_each': 55,
        'save_every_epochs': 5,
        'residual': False,
        'weight_decay': 0,
        'dropout': 0,
    },
    'experiment_20': {
        'architecture_index': -2,  # ResNet
        'optimizer': 'sgd',
        'dataset': 'cifar10',
        'lr': 0.01,
        'batch_size': 16,
        'epoch': 5,
        'reduce_lr_each': 3,
        'save_every_epochs': 1,
        'residual': True,
        'weight_decay': 0,
        'dropout': 0,
    },
    'experiment_21': {
        'architecture_index': 9,
        'optimizer': 'sgd',
        'dataset': 'mnist',
        'lr': 0.01,
        'batch_size': 16,
        'epoch': 5,
        'reduce_lr_each': 50,
        'save_every_epochs': 1,
        'residual': False,
        'weight_decay': 0,
        'dropout': 0,
    }
}
